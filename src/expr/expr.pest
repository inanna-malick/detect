WHITESPACE   =  _{ " " | "\t" | NEWLINE }


bare_char = { ASCII_ALPHANUMERIC | "." | "_" | "/" | "-" | "+" | "@" | "#" | "$" | "%" | "^" | "&" | "*" | "~" | "\\" | "[" | "]" | "{" | "}" | "|" | "?" | "," }
size_unit = { kb | mb | gb | tb }
  kb = { ^"kb" | ^"k" }
  mb = { ^"mb" | ^"m" }
  gb = { ^"gb" | ^"g" }
  tb = { ^"tb" | ^"t" }
set_char = { ASCII_ALPHANUMERIC | "." | "_" | "/" | "-" | "+" | "@" | "#" | "$" | "%" | "^" | "&" | "*" | "~" | "\\"  | "{" | "}" | "(" | ")" | "|" | "?" }
inner_char = @{ !("\"" | "'") ~ ANY }

escaped = { "\\" ~ escapable }
escapable = { "n" | "\\" | "\""}

program         =   { SOI ~ expr ~ EOI }
  expr          =   { prefix* ~ primary ~ (infix ~ prefix* ~ primary )* }
    infix       =  _{ and | or }
      and       =   { "&&" } // logical and
      or        =   { "||" } // logical or
    prefix      =  _{ neg }
      neg       =   { "!" } // Negation
    primary     =  _{ predicate | "(" ~ expr ~ ")" }


predicate =  { selector ~ op ~ rhs }
  selector = { basename | dirpath | fullpath | size | type | filename | ext | contents | modified | created | accessed }
    basename = { "basename" | "base" }
    filename = { "filename" | "file" }
    dirpath  = { "dirpath" | "dir" }
    fullpath = { "fullpath" | "full" }
    ext      = { "extension" | "ext" }
    size     = { "filesize" | "size" }
    type     = { "filetype" | "type" }
    contents = { "contents" | "content" }
    modified = { "modified" | "mtime" }
    created  = { "created" | "ctime" }
    accessed = { "accessed" | "atime" }
  op      = _{ match_ | ne | eq | gteq | lteq | gt | lt | like | in_ | contains }
    eq       = { "==" | "=" }         // exact equals
    ne       = { "!=" }               // not equal
    like     = { "~=" | "~" }         // regex (backward compat)
    match_   = { "=~" }               // regex (explicit)
    gteq     = { ">=" }
    lteq     = { "<=" }
    gt       = { ">" }
    lt       = { "<" }
    in_      = { "in" }               // set membership
    contains = { "contains" }         // substring match
  rhs     = { set_literal | quoted_string | size_value | bare_token }
    set_literal = { "[" ~ set_items? ~ "]" }
      set_items = { set_item ~ ("," ~ set_item)* }
      set_item = { set_token | quoted_string }
    quoted_string = ${ double_quoted | single_quoted }
      double_quoted = { "\"" ~ inner_double ~ "\"" }
      single_quoted = { "'" ~ inner_single ~ "'" }
      inner_double = @{ (!"\"" ~ ANY)* }
      inner_single = @{ (!"'" ~ ANY)* }
    size_value = ${ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+)? ~ size_unit }
    bare_token = @{ bare_char+ }
    set_token = @{ set_char+ }
